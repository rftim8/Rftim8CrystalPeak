namespace Rftim8LeetCode.Temp
{
    public class _01332_RemovePalindromicSubsequences
    {
        /// <summary>
        /// You are given a string s consisting only of letters 'a' and 'b'. 
        /// In a single step you can remove one palindromic subsequence from s.
        /// Return the minimum number of steps to make the given string empty.
        /// A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order.
        /// Note that a subsequence does not necessarily need to be contiguous.
        /// A string is called palindrome if is one that reads the same backward as well as forward.
        /// </summary>
        public _01332_RemovePalindromicSubsequences()
        {
            Console.WriteLine(RemovePalindromeSub("ababa"));
            Console.WriteLine(RemovePalindromeSub("abb"));
            Console.WriteLine(RemovePalindromeSub("baabb"));
            Console.WriteLine(RemovePalindromeSub("babb"));
        }

        private static int RemovePalindromeSub(string s)
        {
            if (string.IsNullOrEmpty(s)) return 0;
            if (IsPalindrome(s)) return 1;
            return 2;
        }

        private static bool IsPalindrome(string s)
        {
            for (int i = 0; i < s.Length; i++)
            {
                if (s[i] != s[s.Length - 1 - i]) return false;
            }

            return true;
        }

        private static bool IsPalindrome0(string s)
        {
            int l = 0, r = s.Length - 1;

            while (l < r)
            {
                if (s[l] != s[r]) return false;
                l++;
                r--;
            }

            return true;
        }
    }
}
